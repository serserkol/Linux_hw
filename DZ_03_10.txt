Для того, чтобы скопировать на свой компьютер репозиторий из github.com, вам нужно выполнить следующие шаги:

Создать учетную запись на github.com, если у вас ее еще нет, и войти в нее.
Создать новый репозиторий на github.com или выбрать существующий, который вы хотите скопировать.
Скопировать URL-адрес репозитория, который вы можете найти под кнопкой «Код» на главной странице репозитория. Вы можете выбрать протокол HTTPS, SSH или GitHub CLI в зависимости от вашего предпочтения и настроек.
Открыть терминал на своем компьютере и перейти в папку, где вы хотите разместить локальную копию репозитория.
Ввести команду git clone и вставить URL-адрес репозитория после пробела. Например: git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git
Нажать клавишу Enter и дождаться окончания процесса клонирования.

Для того, чтобы получить на локальный компьютер изменения с github.com, 

вам нужно использовать команды git, которые позволяют взаимодействовать с удаленным репозиторием. Существует несколько вариантов получения изменений, в зависимости от того, что вы хотите сделать с ними.

Если вы хотите просто скачать все новые ветки и теги с удаленного репозитория, без объединения их со своими локальными ветками, вы можете использовать команду git fetch REMOTE-NAME, где REMOTE-NAME это имя удаленного репозитория, например origin1.
Если вы хотите объединить изменения из определенной ветки удаленного репозитория со своей локальной веткой, вы можете использовать команду git merge REMOTE-NAME/BRANCH-NAME, где BRANCH-NAME это имя ветки, например main1.
Если вы хотите одновременно скачать и объединить изменения из определенной ветки удаленного репозитория со своей локальной веткой, вы можете использовать команду git pull REMOTE-NAME BRANCH-NAME, которая является удобным сокращением для git fetch и git merge1.
Перед тем, как использовать любую из этих команд, убедитесь, что вы сохранили свою локальную работу с помощью команды git commit. Если вы столкнетесь с конфликтом при объединении, который вы не можете разрешить, или если вы решите отменить объединение, вы можете использовать команду git merge --abort, чтобы вернуть ветку к состоянию до получения изменений1.

Команда git status 
показывает состояние файлов в рабочем каталоге и индексе: какие файлы изменены, но не добавлены в индекс; какие ожидают коммита в индексе. Вдобавок к этому выводятся подсказки о том, как изменить состояние файлов1.

Команда git log 
является основным инструментом Git для изучения истории репозитория. С помощью этой команды можно найти конкретную версию проекта или определить изменения, которые будут применены при слиянии веток[2][2]. Команда git log имеет много параметров для просмотра различий, вносимых коммитом, например --stat и -p3.