Вот ответы на ваши вопросы:

1. Чтобы отказаться от изменений в файле (файлах) в рабочем каталоге, вы можете использовать команду `git checkout`. Например:
```bash
git checkout -- <имя файла>
```
2. Чтобы вернуть файл из индекса в рабочий каталог, вы можете использовать команду `git reset`. Например:
```bash
git reset HEAD <имя файла>
```
3. Чтобы отменить ошибочный коммит, вы можете использовать команду `git revert`. Например:
```bash
git revert <commit_id>
```
4. Чтобы исправить коммит, отправленный на сервер GitHub, вы можете сначала отменить его локально с помощью `git revert`
или `git reset`, затем сделать необходимые изменения и снова выполнить коммит и push.
5. Чтобы создать новую ветку и переключиться на нее, вы можете использовать команду `git checkout -b`. Например:
```bash
git checkout -b <имя новой ветки>
```
6. Fast-forward merge происходит, когда текущая ветка не имеет новых коммитов после того, как была создана ветка, 
которую вы хотите слить. В этом случае Git просто перемещает указатель текущей ветки на последний коммит сливаемой ветки. 
Non-fast-forward merge создает новый коммит, который имеет двух родителей.
7. Конфликт слияния веток может возникнуть, когда одни и те же строки кода были изменены в обоих ветках. Вы можете 
разрешить его, открыв файл с конфликтом и выбрав нужные изменения.
8. Да, вы можете удалить ветку с помощью команды `git branch -d`. Например:
```bash
git branch -d <имя ветки>
```
